SSIMR = function(X, Y){ #utlilizaremos la media recortada
  #primero #calclaremos la media recortada al r%
  r = 0.2
  N = length(X)
  l = N * round(r/2)
  x1 = sort(X)
  y1 = sort(Y)
  x1 = x1[(l + 1):(length(X) - l)]
  y1 = y1[(l + 1):(length(Y) - l)]
  
  #calculamos los elementos a utilizar para evitar carcularlos a cada rato
  #constante incluida para eliminar la inestabilidad que se da cuando las suma de las medias al cuadarado es muy proxima a cero
  C1 = 576e-6 # =(k1*L)^2  ; Por recomendacion del autor se toma k1=0.01 y L=2.4
  C2 = 5184e-6 # =(k2*L)^2 ; Por recomendacion del autor se toma k1=0.01 y L=2.4
  C3 = 2592e-6 # =c2/2
  muX = mean(x1) 
  muY = mean(y1)
  
  #calculamos las varianzas y covarianza reemplanzando la media por la mediana
  vmX = 0
  vmY = 0
  vmXY = 0
  vXY = 0
  for (i in 1:N) {
    vmX = vmX + ((X[i] - muX)^2)
    vmY = vmY + ((Y[i] - muY)^2)
    vmXY = vmXY + ((X[i] - muX) * (Y[i] - muY))
  }
  vmX = sqrt(vmX / (N-1))
  vmY = sqrt(vmY / (N - 1))
  vmXY = vmXY / (N - 1)
  
  #relacion de luminancia
  l.xy = ((2 * abs(muX) * abs(muY)) + C1 ) / (muX^2 + muY^2 + C1)
  #relacion de contraste
  c.xy = ((2 * vmX * vmY) + C2 ) / (vmX^2 + vmY^2 + C2)
  #correlacion
  s.xy = (vmXY + C3) / ((vmX * vmY) + C3)
  #calculamos la SSIMR
  z = l.xy * c.xy * s.xy
  return(z)
}
